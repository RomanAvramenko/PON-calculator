{"version":3,"sources":["components/ruler/Ruler.jsx","components/map/Map.jsx"],"names":["Ruler","callback","map","useMap","mapEvents","useMapEvents","click","lengthValue","_container","textContent","slice","match","join","useEffect","navigator","geolocation","getCurrentPosition","position","panTo","L","LatLng","coords","latitude","longitude","control","ruler","addTo","factory","window","exports","module","require","Control","extend","options","circleMarker","color","radius","lineStyle","dashArray","onAdd","this","_map","DomUtil","create","classList","add","DomEvent","disableClickPropagation","on","_toggleMeasure","_choice","_defaultCursor","style","cursor","_allLayers","layerGroup","onRemove","off","_clickedLatLong","_clickedPoints","_totalLength","doubleClickZoom","disable","_escape","_closePath","_clickCount","_tempLine","featureGroup","_tempPoint","_pointLayer","_polylineLayer","_clicked","_moving","enable","remove","removeLayer","e","text","latlng","push","equals","length","_movingLatLong","polyline","_result","Distance","distaneValue","toFixed","bindTooltip","permanent","className","openTooltip","_addedLength","_calculateBearingAndDistance","sticky","offset","point","keyCode","f1","lat","l1","lng","f2","l2","toRadian","Math","PI","deltaF","deltaL","a","sin","cos","distance","atan2","sqrt","Map","handleMapLength","useState","setLength","id","center","zoom","scrollWheelZoom","url","data","type","value","onClick"],"mappings":"wHAAA,kFAKaA,GALb,MAKqB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChBC,EAAMC,cACNC,EAAYC,YAAa,CAC7BC,MAAO,WACL,IAAMC,EAAcH,EAAUI,WAAWC,YACtCC,OAAO,IAAK,IACZC,MAAM,QACTV,IAAWM,GAAeA,EAAYK,KAAK,QAqB/C,OAjBAC,qBAAU,WACJ,gBAAiBC,UACnBA,UAAUC,YAAYC,oBAAmB,SAACC,GACxCf,EAAIgB,MACF,IAAIC,IAAEC,OAAOH,EAASI,OAAOC,SAAUL,EAASI,OAAOE,eAI3DrB,EAAIgB,MAAM,IAAIC,IAAEC,OAAO,iBAAkB,uBAE1C,CAAClB,IAEJW,qBAAU,WACHX,GACLiB,IAAEK,QAAQC,QAAQC,MAAMxB,KACvB,CAACA,IAEG,QAGT,SAAWyB,EAASC,GACK,kBAAZC,UACTC,EAAOD,QAAUF,EAAQI,EAAQ,MAEb,qBAAXH,GAA0BA,EAAOT,IAC1CS,EAAOT,EAAEnB,MAAQ2B,EAAQR,MAL7B,EAOG,SAAUA,GACXA,EAAEa,QAAQhC,MAAQmB,EAAEa,QAAQC,OAAO,CACjCC,QAAS,CACPjB,SAAU,UACVkB,aAAc,CACZC,MAAO,QACPC,OAAQ,GAEVC,UAAW,CACTF,MAAO,QACPG,UAAW,QAGfC,MAAO,SAAUtC,GASf,OARAuC,KAAKC,KAAOxC,EACZuC,KAAKjC,WAAaW,EAAEwB,QAAQC,OAAO,MAAO,eAC1CH,KAAKjC,WAAWqC,UAAUC,IAAI,iBAC9B3B,EAAE4B,SAASC,wBAAwBP,KAAKjC,YACxCW,EAAE4B,SAASE,GAAGR,KAAKjC,WAAY,QAASiC,KAAKS,eAAgBT,MAC7DA,KAAKU,SAAU,EACfV,KAAKW,eAAiBX,KAAKC,KAAKlC,WAAW6C,MAAMC,OACjDb,KAAKc,WAAapC,EAAEqC,aACbf,KAAKjC,YAEdiD,SAAU,WACRtC,EAAE4B,SAASW,IAAIjB,KAAKjC,WAAY,QAASiC,KAAKS,eAAgBT,OAEhES,eAAgB,WACdT,KAAKU,SAAWV,KAAKU,QACrBV,KAAKkB,gBAAkB,KACvBlB,KAAKmB,eAAiB,GACtBnB,KAAKoB,aAAe,EAEhBpB,KAAKU,SACPV,KAAKC,KAAKoB,gBAAgBC,UAC1B5C,EAAE4B,SAASE,GAAGR,KAAKC,KAAKlC,WAAY,UAAWiC,KAAKuB,QAASvB,MAC7DtB,EAAE4B,SAASE,GAAGR,KAAKC,KAAKlC,WAAY,WAAYiC,KAAKwB,WAAYxB,MACjEA,KAAKjC,WAAWqC,UAAUC,IAAI,yBAC9BL,KAAKyB,YAAc,EACnBzB,KAAK0B,UAAYhD,EAAEiD,eAAe1C,MAAMe,KAAKc,YAC7Cd,KAAK4B,WAAalD,EAAEiD,eAAe1C,MAAMe,KAAKc,YAC9Cd,KAAK6B,YAAcnD,EAAEiD,eAAe1C,MAAMe,KAAKc,YAC/Cd,KAAK8B,eAAiBpD,EAAEiD,eAAe1C,MAAMe,KAAKc,YAClDd,KAAKc,WAAW7B,MAAMe,KAAKC,MAC3BD,KAAKC,KAAKlC,WAAW6C,MAAMC,OAAS,YACpCb,KAAKC,KAAKO,GAAG,QAASR,KAAK+B,SAAU/B,MACrCA,KAAKC,KAAKO,GAAG,YAAaR,KAAKgC,QAAShC,QAExCA,KAAKC,KAAKoB,gBAAgBY,SAC1BvD,EAAE4B,SAASW,IAAIjB,KAAKC,KAAKlC,WAAY,UAAWiC,KAAKuB,QAASvB,MAC9DtB,EAAE4B,SAASW,IAAIjB,KAAKC,KAAKlC,WAAY,WAAYiC,KAAKwB,WAAYxB,MAClEA,KAAKjC,WAAWqC,UAAU8B,OAAO,yBACjClC,KAAKC,KAAKkC,YAAYnC,KAAKc,YAC3Bd,KAAKc,WAAapC,EAAEqC,aACpBf,KAAKC,KAAKlC,WAAW6C,MAAMC,OAASb,KAAKW,eACzCX,KAAKC,KAAKgB,IAAI,QAASjB,KAAK+B,SAAU/B,MACtCA,KAAKC,KAAKgB,IAAI,YAAajB,KAAKgC,QAAShC,QAG7C+B,SAAU,SAAUK,GAgBhB,IAAIC,GAfNrC,KAAKkB,gBAAkBkB,EAAEE,OACzBtC,KAAKmB,eAAeoB,KAAKvC,KAAKkB,iBAC9BxC,EAAEgB,aAAaM,KAAKkB,gBAAiBlB,KAAKP,QAAQC,cAAcT,MAC9De,KAAK6B,aAGL7B,KAAKyB,YAAc,IAClBW,EAAEE,OAAOE,OAAOxC,KAAKmB,eAAenB,KAAKmB,eAAesB,OAAS,OAE9DzC,KAAK0C,gBACPhE,EAAEiE,SACA,CAAC3C,KAAKmB,eAAenB,KAAKyB,YAAc,GAAIzB,KAAK0C,gBACjD1C,KAAKP,QAAQI,WACbZ,MAAMe,KAAK8B,gBAGf9B,KAAKoB,cAAgBpB,KAAK4C,QAAQC,SAC9B7C,KAAKyB,YAAc,GACrBzB,KAAKP,QAAQqD,aAAe9C,KAAKoB,aAAa2B,UAE9CV,EAAOrC,KAAKoB,aAAa2B,UAAY,OAErC/C,KAAKP,QAAQqD,aAAe9C,KAAK4C,QAAQC,SAASE,UAElDV,EAAOrC,KAAK4C,QAAQC,SAASE,UAAY,MAE3CrE,EAAEgB,aAAaM,KAAKkB,gBAAiBlB,KAAKP,QAAQC,cAC/CsD,YAAYX,EAAM,CAAEY,WAAW,EAAMC,UAAW,mBAChDjE,MAAMe,KAAK6B,aACXsB,eAELnD,KAAKyB,eAEPO,QAAS,SAAUI,GAQf,IAAIC,EAPFrC,KAAKkB,kBACPxC,EAAE4B,SAASW,IAAIjB,KAAKjC,WAAY,QAASiC,KAAKS,eAAgBT,MAC9DA,KAAK0C,eAAiBN,EAAEE,OACpBtC,KAAK0B,YACP1B,KAAKC,KAAKkC,YAAYnC,KAAK0B,WAC3B1B,KAAKC,KAAKkC,YAAYnC,KAAK4B,aAG7B5B,KAAKoD,aAAe,EACpBpD,KAAK0B,UAAYhD,EAAEiD,eACnB3B,KAAK4B,WAAalD,EAAEiD,eACpB3B,KAAK0B,UAAUzC,MAAMe,KAAKC,MAC1BD,KAAK4B,WAAW3C,MAAMe,KAAKC,MAC3BD,KAAKqD,+BACLrD,KAAKoD,aAAepD,KAAK4C,QAAQC,SAAW7C,KAAKoB,aACjD1C,EAAEiE,SACA,CAAC3C,KAAKkB,gBAAiBlB,KAAK0C,gBAC5B1C,KAAKP,QAAQI,WACbZ,MAAMe,KAAK0B,WAEXW,EADErC,KAAKyB,YAAc,EACdzB,KAAKoD,aAAaL,UAAY,KAE9B/C,KAAK4C,QAAQC,SAASE,UAAY,KAE3CrE,EAAEgB,aAAaM,KAAK0C,eAAgB1C,KAAKP,QAAQC,cAC9CsD,YAAYX,EAAM,CACjBiB,QAAQ,EACRC,OAAQ7E,EAAE8E,MAAM,EAAG,GACnBN,UAAW,mBAEZjE,MAAMe,KAAK4B,YACXuB,gBAGP5B,QAAS,SAAUa,GACC,KAAdA,EAAEqB,UACAzD,KAAKyB,YAAc,EACrBzB,KAAKwB,cAELxB,KAAKU,SAAU,EACfV,KAAKS,oBAIX4C,6BAA8B,WAC5B,IAAIK,EAAK1D,KAAKkB,gBAAgByC,IAC5BC,EAAK5D,KAAKkB,gBAAgB2C,IAC1BC,EAAK9D,KAAK0C,eAAeiB,IACzBI,EAAK/D,KAAK0C,eAAemB,IACvBG,EAAWC,KAAKC,GAAK,IAIrBC,GAAUL,EAAKJ,GAAMM,EACrBI,GAAUL,EAAKH,GAAMI,EACrBK,EACFJ,KAAKK,IAAIH,EAAS,GAAKF,KAAKK,IAAIH,EAAS,GACzCF,KAAKM,IAAIb,EAAKM,GACZC,KAAKM,IAAIT,EAAKE,GACdC,KAAKK,IAAIF,EAAS,GAClBH,KAAKK,IAAIF,EAAS,GAElBI,EAVI,QASA,EAAIP,KAAKQ,MAAMR,KAAKS,KAAKL,GAAIJ,KAAKS,KAAK,EAAIL,KAEnDrE,KAAK4C,QAAU,CACbC,SAAU2B,IAGdhD,WAAY,WACVxB,KAAKC,KAAKkC,YAAYnC,KAAK0B,WAC3B1B,KAAKC,KAAKkC,YAAYnC,KAAK4B,YACvB5B,KAAKyB,aAAe,GAAGzB,KAAKC,KAAKkC,YAAYnC,KAAK6B,aACtD7B,KAAKU,SAAU,EACfhC,EAAE4B,SAASE,GAAGR,KAAKjC,WAAY,QAASiC,KAAKS,eAAgBT,MAC7DA,KAAKS,oBAIT/B,EAAEK,QAAQC,MAAQ,SAAUS,GAC1B,OAAO,IAAIf,EAAEa,QAAQhC,MAAMkC,MAE5BN,U,+JCzLYwF,UA3BH,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACb,EAA4BC,mBAAS,GAArC,mBAAOpC,EAAP,KAAeqC,EAAf,KAMA,OACE,sBAAKC,GAAG,QAAR,UACE,eAAC,IAAD,CACEC,OAAQ,CAAC,iBAAkB,oBAC3BC,KAAM,GACNC,iBAAiB,EAHnB,UAKE,cAAC,IAAD,CAAWC,IAAI,sDACf,cAAC,IAAD,CAAO3H,SAZI,SAAC4H,GAChBN,EAAUM,SAaR,uBACElC,UAAU,aACVmC,KAAK,SACLC,MAAM,mDACNC,QAAS,kBAAMX,EAAgBnC","file":"static/js/4.3870e128.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useMap, useMapEvents } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport \"./Ruler.scss\";\r\n\r\nexport const Ruler = ({ callback }) => {\r\n  const map = useMap();\r\n  const mapEvents = useMapEvents({\r\n    click: () => {\r\n      const lengthValue = mapEvents._container.textContent\r\n        .slice(-16, -10)\r\n        .match(/\\d+/g);\r\n      callback(!!lengthValue && lengthValue.join(\"\"));\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\"geolocation\" in navigator) {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        map.panTo(\r\n          new L.LatLng(position.coords.latitude, position.coords.longitude)\r\n        );\r\n      });\r\n    } else {\r\n      map.panTo(new L.LatLng(50.4421237150998, 30.520453831008716));\r\n    }\r\n  }, [map]);\r\n\r\n  useEffect(() => {\r\n    if (!map) return;\r\n    L.control.ruler().addTo(map);\r\n  }, [map]);\r\n\r\n  return null;\r\n};\r\n\r\n(function (factory, window) {\r\n  if (typeof exports === \"object\") {\r\n    module.exports = factory(require(\"leaflet\"));\r\n  }\r\n  if (typeof window !== \"undefined\" && window.L) {\r\n    window.L.Ruler = factory(L);\r\n  }\r\n})(function (L) {\r\n  L.Control.Ruler = L.Control.extend({\r\n    options: {\r\n      position: \"topleft\",\r\n      circleMarker: {\r\n        color: \"black\",\r\n        radius: 2,\r\n      },\r\n      lineStyle: {\r\n        color: \"black\",\r\n        dashArray: \"1,6\",\r\n      },\r\n    },\r\n    onAdd: function (map) {\r\n      this._map = map;\r\n      this._container = L.DomUtil.create(\"div\", \"leaflet-bar\");\r\n      this._container.classList.add(\"leaflet-ruler\");\r\n      L.DomEvent.disableClickPropagation(this._container);\r\n      L.DomEvent.on(this._container, \"click\", this._toggleMeasure, this);\r\n      this._choice = false;\r\n      this._defaultCursor = this._map._container.style.cursor;\r\n      this._allLayers = L.layerGroup();\r\n      return this._container;\r\n    },\r\n    onRemove: function () {\r\n      L.DomEvent.off(this._container, \"click\", this._toggleMeasure, this);\r\n    },\r\n    _toggleMeasure: function () {\r\n      this._choice = !this._choice;\r\n      this._clickedLatLong = null;\r\n      this._clickedPoints = [];\r\n      this._totalLength = 0;\r\n\r\n      if (this._choice) {\r\n        this._map.doubleClickZoom.disable();\r\n        L.DomEvent.on(this._map._container, \"keydown\", this._escape, this);\r\n        L.DomEvent.on(this._map._container, \"dblclick\", this._closePath, this);\r\n        this._container.classList.add(\"leaflet-ruler-clicked\");\r\n        this._clickCount = 0;\r\n        this._tempLine = L.featureGroup().addTo(this._allLayers);\r\n        this._tempPoint = L.featureGroup().addTo(this._allLayers);\r\n        this._pointLayer = L.featureGroup().addTo(this._allLayers);\r\n        this._polylineLayer = L.featureGroup().addTo(this._allLayers);\r\n        this._allLayers.addTo(this._map);\r\n        this._map._container.style.cursor = \"crosshair\";\r\n        this._map.on(\"click\", this._clicked, this);\r\n        this._map.on(\"mousemove\", this._moving, this);\r\n      } else {\r\n        this._map.doubleClickZoom.enable();\r\n        L.DomEvent.off(this._map._container, \"keydown\", this._escape, this);\r\n        L.DomEvent.off(this._map._container, \"dblclick\", this._closePath, this);\r\n        this._container.classList.remove(\"leaflet-ruler-clicked\");\r\n        this._map.removeLayer(this._allLayers);\r\n        this._allLayers = L.layerGroup();\r\n        this._map._container.style.cursor = this._defaultCursor;\r\n        this._map.off(\"click\", this._clicked, this);\r\n        this._map.off(\"mousemove\", this._moving, this);\r\n      }\r\n    },\r\n    _clicked: function (e) {\r\n      this._clickedLatLong = e.latlng;\r\n      this._clickedPoints.push(this._clickedLatLong);\r\n      L.circleMarker(this._clickedLatLong, this.options.circleMarker).addTo(\r\n        this._pointLayer\r\n      );\r\n      if (\r\n        this._clickCount > 0 &&\r\n        !e.latlng.equals(this._clickedPoints[this._clickedPoints.length - 2])\r\n      ) {\r\n        if (this._movingLatLong) {\r\n          L.polyline(\r\n            [this._clickedPoints[this._clickCount - 1], this._movingLatLong],\r\n            this.options.lineStyle\r\n          ).addTo(this._polylineLayer);\r\n        }\r\n        var text;\r\n        this._totalLength += this._result.Distance;\r\n        if (this._clickCount > 1) {\r\n          this.options.distaneValue = this._totalLength.toFixed();\r\n\r\n          text = this._totalLength.toFixed() + \" m\";\r\n        } else {\r\n          this.options.distaneValue = this._result.Distance.toFixed();\r\n\r\n          text = this._result.Distance.toFixed() + \" m\";\r\n        }\r\n        L.circleMarker(this._clickedLatLong, this.options.circleMarker)\r\n          .bindTooltip(text, { permanent: true, className: \"result-tooltip\" })\r\n          .addTo(this._pointLayer)\r\n          .openTooltip();\r\n      }\r\n      this._clickCount++;\r\n    },\r\n    _moving: function (e) {\r\n      if (this._clickedLatLong) {\r\n        L.DomEvent.off(this._container, \"click\", this._toggleMeasure, this);\r\n        this._movingLatLong = e.latlng;\r\n        if (this._tempLine) {\r\n          this._map.removeLayer(this._tempLine);\r\n          this._map.removeLayer(this._tempPoint);\r\n        }\r\n        var text;\r\n        this._addedLength = 0;\r\n        this._tempLine = L.featureGroup();\r\n        this._tempPoint = L.featureGroup();\r\n        this._tempLine.addTo(this._map);\r\n        this._tempPoint.addTo(this._map);\r\n        this._calculateBearingAndDistance();\r\n        this._addedLength = this._result.Distance + this._totalLength;\r\n        L.polyline(\r\n          [this._clickedLatLong, this._movingLatLong],\r\n          this.options.lineStyle\r\n        ).addTo(this._tempLine);\r\n        if (this._clickCount > 1) {\r\n          text = this._addedLength.toFixed() + \" m\";\r\n        } else {\r\n          text = this._result.Distance.toFixed() + \" m\";\r\n        }\r\n        L.circleMarker(this._movingLatLong, this.options.circleMarker)\r\n          .bindTooltip(text, {\r\n            sticky: true,\r\n            offset: L.point(0, 0),\r\n            className: \"moving-tooltip\",\r\n          })\r\n          .addTo(this._tempPoint)\r\n          .openTooltip();\r\n      }\r\n    },\r\n    _escape: function (e) {\r\n      if (e.keyCode === 27) {\r\n        if (this._clickCount > 0) {\r\n          this._closePath();\r\n        } else {\r\n          this._choice = true;\r\n          this._toggleMeasure();\r\n        }\r\n      }\r\n    },\r\n    _calculateBearingAndDistance: function () {\r\n      var f1 = this._clickedLatLong.lat,\r\n        l1 = this._clickedLatLong.lng,\r\n        f2 = this._movingLatLong.lat,\r\n        l2 = this._movingLatLong.lng;\r\n      var toRadian = Math.PI / 180;\r\n      // haversine formula\r\n      // distance\r\n      var R = 6371000; // metres original value was 6371 for kilometers\r\n      var deltaF = (f2 - f1) * toRadian;\r\n      var deltaL = (l2 - l1) * toRadian;\r\n      var a =\r\n        Math.sin(deltaF / 2) * Math.sin(deltaF / 2) +\r\n        Math.cos(f1 * toRadian) *\r\n          Math.cos(f2 * toRadian) *\r\n          Math.sin(deltaL / 2) *\r\n          Math.sin(deltaL / 2);\r\n      var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n      var distance = R * c;\r\n      this._result = {\r\n        Distance: distance,\r\n      };\r\n    },\r\n    _closePath: function () {\r\n      this._map.removeLayer(this._tempLine);\r\n      this._map.removeLayer(this._tempPoint);\r\n      if (this._clickCount <= 1) this._map.removeLayer(this._pointLayer);\r\n      this._choice = false;\r\n      L.DomEvent.on(this._container, \"click\", this._toggleMeasure, this);\r\n      this._toggleMeasure();\r\n    },\r\n  });\r\n\r\n  L.control.ruler = function (options) {\r\n    return new L.Control.Ruler(options);\r\n  };\r\n}, window);\r\n","import React, { useState } from \"react\";\r\nimport { MapContainer, TileLayer } from \"react-leaflet\";\r\nimport { Ruler } from \"../ruler/Ruler\";\r\nimport \"./Map.scss\";\r\n\r\nconst Map = ({ handleMapLength }) => {\r\n  const [length, setLength] = useState(0);\r\n\r\n  const callback = (data) => {\r\n    setLength(data);\r\n  };\r\n\r\n  return (\r\n    <div id=\"mapid\">\r\n      <MapContainer\r\n        center={[50.4421237150998, 30.520453831008716]}\r\n        zoom={13}\r\n        scrollWheelZoom={true}\r\n      >\r\n        <TileLayer url=\"http://mt1.google.com/vt/lyrs=y&x={x}&y={y}&z={z}\" />\r\n        <Ruler callback={callback} />\r\n      </MapContainer>\r\n      <input\r\n        className=\"map-button\"\r\n        type=\"button\"\r\n        value=\"добавить\"\r\n        onClick={() => handleMapLength(length)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n"],"sourceRoot":""}